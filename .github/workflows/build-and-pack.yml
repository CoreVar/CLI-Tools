name: Build and Package CoreVar CLI

on:
  push:
    branches:
      - 'releases/**'
  pull_request:
    branches:
      - 'releases/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
  
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#/releases/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore and Build Projects
      run: |
        dotnet restore
        dotnet build ./CommandLineInterface.SourceGenerator/CommandLineInterface.SourceGenerator.csproj --configuration Release --no-restore
        dotnet build ./CommandLineInterface.Abstractions/CommandLineInterface.Abstractions.csproj --configuration Release --no-restore
        dotnet build ./CommandLineInterface/CommandLineInterface.csproj --configuration Release --no-restore
        dotnet build ./CommandLineInterface.Blazor/CommandLineInterface.Blazor.csproj --configuration Release --no-restore
      working-directory: ./src

    - name: Pack
      run: |
        dotnet pack ./CommandLineInterface.Abstractions/CommandLineInterface.Abstractions.csproj -c Release -o nupkgs /p:PackageVersion=${{stepts.extract_branch.outputs.branch}}-prerelease-${{ github.run_number }}
        dotnet pack ./CommandLineInterface/CommandLineInterface.csproj -c Release -o nupkgs /p:PackageVersion=${{stepts.extract_branch.outputs.branch}}-prerelease-${{ github.run_number }}
        dotnet pack ./CommandLineInterface.Blazor/CommandLineInterface.Blazor.csproj -c Release -o nupkgs /p:PackageVersion=${{stepts.extract_branch.outputs.branch}}-prerelease-${{ github.run_number }}
      working-directory: ./src

    - name: Upload NuGet Package as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: NuGet-Packages
        path: ./src/nupkgs/*.nupkg


    - name: Publish NuGet Packages
      run: dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_PUBLISH_KEY }} --source https://api.nuget.org/v3/index.json
      working-directory: ./src
